//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Controls/DefaultInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DefaultInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DefaultInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DefaultInputs"",
    ""maps"": [
        {
            ""name"": ""Head"",
            ""id"": ""09ff3ccc-21b4-4346-a3a2-7c978b5af892"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""1a9029f8-7a46-46b9-9eff-e9ae8365f611"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""aed87fe6-2b01-4dd2-a8fa-195578fd8158"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""6bb4e248-e42b-47c3-b66c-79566508ca74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""08654a17-c094-4bbd-8946-415ae4ce2406"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Eye Gaze Position"",
                    ""type"": ""Value"",
                    ""id"": ""dde820a2-0462-4756-be47-630b5b56c115"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Eye Gaze Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""8ac32629-4403-4068-aae5-2cd243e230c2"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Eye Gaze Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""ea26ba43-844b-4585-817a-2f124b571813"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Eye Gaze Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""73053154-2fbc-4d78-9cac-000282b64f79"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cff1f981-6e1f-4e2c-a90c-715a0ea2e80e"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d22c160-9642-4784-bed3-f108d9099185"",
                    ""path"": ""<HandheldARInputDevice>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2017383-a3f6-4c46-acb1-012b8eece9cc"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30a88e64-475a-4a1c-aca0-80b6a2bc3327"",
                    ""path"": ""<HandheldARInputDevice>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""fd9bd2d1-a464-4069-bf55-7f7a3cdb5a96"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eye Gaze Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""ef9a3bee-0af0-4688-81d3-49c2d9be0def"",
                    ""path"": ""<EyeGaze>/pose/rotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""aaf13e7c-a814-4c6e-9349-042da0cb27e9"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""3e829ba4-2fad-45ea-8114-7670f0e484be"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""0cf0b092-6006-474b-9cf5-dc4039450f39"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eye Gaze Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""872dc9a3-bab9-4b3f-9f84-8d12371f1f67"",
                    ""path"": ""<EyeGaze>/pose/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""2f870b88-8825-4a62-b02e-b5a523723446"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""eaececb1-b4a3-4b47-83c2-60562a364085"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Integer Fallback"",
                    ""id"": ""1a6685cf-ae82-4f22-a967-75610a8e71ed"",
                    ""path"": ""IntegerFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eye Gaze Tracking State"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""0dc9d652-871d-4ba5-94a1-50cf8218009a"",
                    ""path"": ""<EyeGaze>/pose/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""9bbd034f-9254-4dd5-9df7-d84f53b0bc8d"",
                    ""path"": ""<XRHMD>/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""d5e35a2f-03c4-432a-8e5e-d200278bf0a9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""43a7b1a1-e99a-4346-a058-5b68c535729d"",
                    ""path"": ""<XRHMD>/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15eff92f-dac7-4e6e-986c-08b3f1e73fac"",
                    ""path"": ""<XRHMD>/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Button Fallback"",
                    ""id"": ""c262df21-2ffb-4295-93cc-8fdb5649da7e"",
                    ""path"": ""ButtonFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eye Gaze Is Tracked"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""f77492f8-09ee-49d0-b821-7c31cb5c2a16"",
                    ""path"": ""<EyeGaze>/pose/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""960252ae-88e8-427a-ac9f-ecac6fb3c7d1"",
                    ""path"": ""<XRHMD>/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""dfc94c22-a115-471f-9f17-8cb6bc7f6637"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Eye Gaze Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""LeftHand"",
            ""id"": ""5fe596f9-1b7b-49b7-80a7-3b5195caf74d"",
            ""actions"": [
                {
                    ""name"": ""Directionals"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4b82c470-4e11-4323-9392-54b225379a87"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""83a7af0b-87e3-42c3-a909-95fbf8091e4f"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""cb6b7130-2bac-4ef7-abe4-6991ae7d419d"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""82eb6741-beef-48d3-83ab-a957dc1caa1e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""d20fc51c-7916-43a7-8b03-706049966aea"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""664a62b0-e178-421d-b3f8-014eec01591d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim Position"",
                    ""type"": ""Value"",
                    ""id"": ""c73a0160-3d9b-4dde-96f9-6a390e68778c"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""f208faac-e869-4280-ac9c-9b3d0ab819bb"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim Flags"",
                    ""type"": ""Value"",
                    ""id"": ""f98e71db-49b4-4882-8991-a0e386733e87"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pinch Position"",
                    ""type"": ""Value"",
                    ""id"": ""cac52a91-5970-4ad2-8c86-a8c0e91a1837"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Poke Position"",
                    ""type"": ""Value"",
                    ""id"": ""4c557d81-3795-4355-a83e-6f886221d011"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Poke Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""0565b7f7-f841-4395-98df-a77f4dd6d9c9"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Position"",
                    ""type"": ""Value"",
                    ""id"": ""e1240870-ef45-4f3e-8110-ff1b9049c4ca"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""41873a55-b316-4dbe-96e6-93477eef5e47"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""5ad3a107-0c52-4293-9e5a-a4e525462931"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Value"",
                    ""type"": ""Value"",
                    ""id"": ""24adb937-17fe-4d42-87eb-b26ff575213c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""e385d6e7-b71d-4cc5-9e40-77dec9613fab"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activate Value"",
                    ""type"": ""Value"",
                    ""id"": ""9c15acc1-dffb-4cfb-a6fa-36a1cbf62441"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""c1315dbd-1cbe-445b-812b-0ecd687c2203"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Press Value"",
                    ""type"": ""Value"",
                    ""id"": ""06ee248f-3ebc-4212-93f0-7eb5b3ae465f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""f72b7f5c-36db-4359-9543-373c3980cfd4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""InvertVector2(invertY=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""09d6c6f8-50b3-46e4-9cec-13d85082dddf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Translate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""d5dc3064-5084-4b91-bead-dde06064827a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scale Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""d3fdbf09-558d-4171-8902-73d74288723c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scale Delta"",
                    ""type"": ""Value"",
                    ""id"": ""1db5a25b-62fc-482b-8556-96479872f6ad"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""61466a56-4ee4-47b1-aa6a-4806de1de5f2"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""afdcfbff-e241-4fdd-a6d1-23b0bf273360"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""ed03d944-4c09-4c38-8b68-5c844e18ca7c"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""c98fc8c8-7fc6-4909-89b6-c5b7568e7275"",
                    ""path"": ""<XRHandDevice>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""14aeff85-d719-43ff-a124-b1cd7ca8686d"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""abf752ec-feee-4d51-b530-f0870f48acc9"",
                    ""path"": ""<XRController>{LeftHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""6580b669-0651-401c-9779-85ef22689130"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""ae101942-9eaa-4c53-a388-cafc3fd89bdf"",
                    ""path"": ""<XRHandDevice>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""acdf9550-5529-4ff7-8558-73ecdf0d75bd"",
                    ""path"": ""<XRController>{LeftHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97a0351f-659b-482a-8fa0-19015ccd055e"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34454fec-7610-497a-b1a5-d3d5f01b312c"",
                    ""path"": ""<XRHandDevice>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28df8d2f-b563-4377-bd11-6c8932ee591c"",
                    ""path"": ""<MetaAimHand>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Aim Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2623b909-75bd-40da-97bd-ae1ecfb0a89b"",
                    ""path"": ""<MetaAimHand>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Aim Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7a37505-52bd-4a96-8f88-c761a62a71e7"",
                    ""path"": ""<XRHandDevice>{LeftHand}/pinchPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Pinch Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""017a01a2-6e1a-4b39-9b5e-e115d5d2dd6a"",
                    ""path"": ""<XRHandDevice>{LeftHand}/pokePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Poke Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ab4651e-837c-4352-9055-6671517f1917"",
                    ""path"": ""<XRHandDevice>{LeftHand}/pokeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Poke Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1de7b81-80d1-4207-8f19-4fb96a537bb3"",
                    ""path"": ""<XRController>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9f33fe3-b3bf-48c1-a8bc-dd6a4ddfba94"",
                    ""path"": ""<XRHandDevice>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""286f44f6-74a5-4f92-8468-42445c7a3cb8"",
                    ""path"": ""<MetaAimHand>{LeftHand}/aimFlags"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Aim Flags"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21a4b6f9-1ebe-434f-b572-066a77b04c48"",
                    ""path"": ""<XRHandDevice>{LeftHand}/gripPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c1f9e74-aba4-41d6-b519-90ed563be5d7"",
                    ""path"": ""<XRHandDevice>{LeftHand}/gripRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cc54f71-48c8-4bd9-bd12-b3d67bfc4dec"",
                    ""path"": ""<XRController>{LeftHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebed1a94-d4c6-40a0-a4c5-136ff489527b"",
                    ""path"": ""<MetaAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26a81f88-abfe-471d-a18b-a10ca8065a22"",
                    ""path"": ""<XRController>{LeftHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2869308c-94c0-4f94-9a86-6b878eca1a73"",
                    ""path"": ""<MetaAimHand>{LeftHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2e9e6ee-d327-43ea-8c1c-3f1dc36cd705"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""adbb373f-96e2-4acb-ba9b-7189935fb15e"",
                    ""path"": ""<XRController>{LeftHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2672e9f-27c0-4fd5-a229-579b629c4bd0"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca38a17a-c622-4f82-a310-fe4948ad8ae2"",
                    ""path"": ""<MetaAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87244844-e67b-49ed-bb30-5f1292c14b17"",
                    ""path"": ""<XRController>{LeftHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1436909b-e98b-4888-90bc-39f28540f5ef"",
                    ""path"": ""<MetaAimHand>{LeftHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e70fcaa7-e096-46bb-886e-306514d8801a"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27a3dfe3-577f-45cb-bd6f-413e03a60448"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(y=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13546389-631a-4a2d-b5fc-072a8a674f17"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""702ce31a-48ca-48ee-bb01-7745209a9656"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Scale Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fd4ec19-a8d0-4ae2-8e71-ac88915b2f6f"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Scale Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e49e463-4773-4d3a-bdcb-ea03cfd8c462"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR;Generic XR Controller"",
                    ""action"": ""Directionals"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c6584da9-aaa4-42d4-8577-5862256cb310"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Directionals"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3a8c4fd8-8a7a-4d11-aec1-2547dac7641f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard Mouse"",
                    ""action"": ""Directionals"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""442e7ac5-a0b3-4451-a291-f5aec184e821"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard Mouse"",
                    ""action"": ""Directionals"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""41a8b07c-78b3-4819-9b33-981a02845198"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard Mouse"",
                    ""action"": ""Directionals"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""68df1218-c995-4b46-89ff-836d80c541b2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard Mouse"",
                    ""action"": ""Directionals"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""RightHand"",
            ""id"": ""7960f8ef-2bf3-4281-aecc-4c03809d6c8c"",
            ""actions"": [
                {
                    ""name"": ""Directionals"",
                    ""type"": ""Value"",
                    ""id"": ""dd8c3723-05f1-49c1-be19-c95987620e9b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Face Buttons"",
                    ""type"": ""PassThrough"",
                    ""id"": ""80a3ffcb-fb1c-4dbf-8c39-52c2d7a303b3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""c4990d70-7b8a-4ce1-b03c-da86716b8352"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""ee6bf5bf-bb0a-4a50-8327-cb654b19e298"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""a705ffe4-b2c8-4b78-847f-25257d4e30af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""167ea203-5bfb-4d74-bde9-8026b7483102"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""57b2a1b4-3290-46d6-ac07-4854ee8f91b1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim Position"",
                    ""type"": ""Value"",
                    ""id"": ""daf49d5d-4ba8-4bf7-9010-e7cae2096907"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""148c182f-63ef-4709-8057-f6ea8070cb5c"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Aim Flags"",
                    ""type"": ""Value"",
                    ""id"": ""93a75a21-033e-440c-9954-ff264afb2db9"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pinch Position"",
                    ""type"": ""Value"",
                    ""id"": ""7a2e5dcd-3e49-4622-90ea-6607994f2be0"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Poke Position"",
                    ""type"": ""Value"",
                    ""id"": ""496d56bd-afd7-495b-a326-16e4ef742bc1"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Poke Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""3767652c-5427-421b-8f8d-660106453cb1"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Position"",
                    ""type"": ""Value"",
                    ""id"": ""defe4495-ba8f-4958-b2fb-98d889e45ac5"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""6bc56065-b0db-4265-8cef-5c7d4f40128a"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""4b55c896-4ced-47c4-b27e-c8a809ead811"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Value"",
                    ""type"": ""Value"",
                    ""id"": ""4f77e422-026f-43cb-8b34-831f768c50bb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""51eec5c6-70b0-4e5c-8567-321060335bbe"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activate Value"",
                    ""type"": ""Value"",
                    ""id"": ""e44ed956-7e9b-49dc-9a59-f37f516c92d4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""c3472f2f-5754-4cdd-ae18-6bf11428630e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Press Value"",
                    ""type"": ""Value"",
                    ""id"": ""0b8961c1-74c6-403e-bef2-b8da57874403"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""7a7253fc-e9bd-403b-a43c-1c3fb8ff3d18"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""InvertVector2(invertY=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""3599ba21-b85e-4e34-8a39-701daadc86fb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Translate Anchor"",
                    ""type"": ""Value"",
                    ""id"": ""846fb9c9-62c8-49ff-9b65-50534d356779"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Scale Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""962ce2be-c389-48a2-a716-83738701954f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scale Delta"",
                    ""type"": ""Value"",
                    ""id"": ""305fa983-616e-4164-9b7c-71e2506fd761"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""84e51e1c-1b95-4f3e-a61f-29da6c1f0816"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""3722d501-eb80-4f61-9361-08a5ea7a1394"",
                    ""path"": ""<XRController>{RightHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""2e6ad191-d5aa-4919-aac6-295c83387a72"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""b9ecb60d-341e-47cf-b50a-41d5815af8b0"",
                    ""path"": ""<XRHandDevice>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""74e968f1-ad08-4a82-a68d-764517faecef"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""9717e367-64a4-440a-9974-1e641d753eb2"",
                    ""path"": ""<XRController>{RightHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""0794a41d-29ef-48ec-a452-6b7de29b52fa"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""3ef0a781-60c5-48bc-a584-f95553f8ae0a"",
                    ""path"": ""<XRHandDevice>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6011e1e6-b2dd-4cb1-8da5-29b03868f2c5"",
                    ""path"": ""<XRController>{RightHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03ccbaec-eeca-4fc4-8281-ee1758b4eb9b"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""714d1173-f908-4bca-951c-4adb4eb7b4c5"",
                    ""path"": ""<XRHandDevice>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd822fc8-c655-4a4d-87d0-9575760b6dca"",
                    ""path"": ""<MetaAimHand>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Aim Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bb1158a-2d78-446b-9351-6f9b3f1364cb"",
                    ""path"": ""<MetaAimHand>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Aim Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21413a94-0048-4112-b433-a770f183f592"",
                    ""path"": ""<XRHandDevice>{RightHand}/pinchPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Pinch Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e847fad-7431-4e48-883a-d489fca4ce0d"",
                    ""path"": ""<XRHandDevice>{RightHand}/pokePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Poke Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99b19b88-e2ad-4670-91ee-1f55f6c34a69"",
                    ""path"": ""<XRHandDevice>{RightHand}/pokeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Poke Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1de48aee-890b-4dbb-a02d-51df9bd39db7"",
                    ""path"": ""<XRController>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a0c4fe0-639a-44e0-beeb-4e11e0dea7ef"",
                    ""path"": ""<XRHandDevice>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5469d4d1-9645-4397-a596-d74f876eafc2"",
                    ""path"": ""<MetaAimHand>{RightHand}/aimFlags"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Aim Flags"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efcaf94e-8faa-439e-983b-c65f79c3b743"",
                    ""path"": ""<XRHandDevice>{RightHand}/gripPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70a747b6-46e8-4d3b-aaec-20bcab8f1dd7"",
                    ""path"": ""<XRHandDevice>{RightHand}/gripRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Grip Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac641411-ab93-4d73-8823-b88087d66710"",
                    ""path"": ""<XRController>{RightHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfb906b5-3921-4f07-8842-e451f61047ef"",
                    ""path"": ""<MetaAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc01aa61-d324-48a7-863a-5d9fe360fccc"",
                    ""path"": ""<XRController>{RightHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d33fe30-69f3-419d-9cb1-dde58366e9ae"",
                    ""path"": ""<MetaAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dde3daa-66af-4644-a111-0d7d2918626e"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b17f55f-d318-4751-be3b-80ac4da0289a"",
                    ""path"": ""<XRController>{RightHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Activate Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d80a13d-709d-4a80-bea2-30228f86ea2e"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9a1d2fc-bbb2-4540-907b-abd3a91b284b"",
                    ""path"": ""<MetaAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""005a2d53-fa4f-442d-8f05-120c84bc0e35"",
                    ""path"": ""<XRController>{RightHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""defff002-1731-4c79-9e26-644ec0a94df7"",
                    ""path"": ""<MetaAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c96d4d1-7f43-4bbc-a118-745ab126b0aa"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""UI Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""504557f9-4c11-4b77-9b2a-ab8d6a9b6d87"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(y=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Rotate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""318d9c66-60ff-47b4-bc5c-ac07d5ebb276"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Translate Anchor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""004c9151-e36e-4f29-be9c-9f9efe9ab6a8"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxisClick}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Scale Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8894e3a-dcb0-4adf-a2ed-95d4997319f1"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0),StickDeadzone"",
                    ""groups"": ""Generic XR Controller"",
                    ""action"": ""Scale Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""76a13c08-6bba-4988-a17b-6c3730dd7b22"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face Buttons"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""05ee8f1e-08ab-4e81-94f6-83c52f51cc64"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard Mouse"",
                    ""action"": ""Face Buttons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""5af97705-489d-4d0c-ac28-1b612cedcf4a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Keyboard Mouse"",
                    ""action"": ""Face Buttons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""379f0dd4-3e42-42a9-8ce3-da21b1298b81"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Face Buttons"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""af9dd237-0cc5-41b8-972d-d8e306b6b5f2"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR;Generic XR Controller"",
                    ""action"": ""Face Buttons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d658c088-0d9d-4a7c-a432-59dc88032a80"",
                    ""path"": ""<XRController>{RightHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";XR;Generic XR Controller"",
                    ""action"": ""Face Buttons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bb53ff8e-2a13-4b94-8bee-9b53cbe80326"",
                    ""path"": ""<XRSimulatedController>{RightHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Generic XR Controller"",
                    ""action"": ""Directionals"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Generic XR Controller"",
            ""bindingGroup"": ""Generic XR Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>{LeftHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>{RightHand}"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<WMRHMD>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard Mouse"",
            ""bindingGroup"": ""Keyboard Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Head
        m_Head = asset.FindActionMap("Head", throwIfNotFound: true);
        m_Head_Position = m_Head.FindAction("Position", throwIfNotFound: true);
        m_Head_Rotation = m_Head.FindAction("Rotation", throwIfNotFound: true);
        m_Head_IsTracked = m_Head.FindAction("Is Tracked", throwIfNotFound: true);
        m_Head_TrackingState = m_Head.FindAction("Tracking State", throwIfNotFound: true);
        m_Head_EyeGazePosition = m_Head.FindAction("Eye Gaze Position", throwIfNotFound: true);
        m_Head_EyeGazeRotation = m_Head.FindAction("Eye Gaze Rotation", throwIfNotFound: true);
        m_Head_EyeGazeIsTracked = m_Head.FindAction("Eye Gaze Is Tracked", throwIfNotFound: true);
        m_Head_EyeGazeTrackingState = m_Head.FindAction("Eye Gaze Tracking State", throwIfNotFound: true);
        // LeftHand
        m_LeftHand = asset.FindActionMap("LeftHand", throwIfNotFound: true);
        m_LeftHand_Directionals = m_LeftHand.FindAction("Directionals", throwIfNotFound: true);
        m_LeftHand_Position = m_LeftHand.FindAction("Position", throwIfNotFound: true);
        m_LeftHand_Rotation = m_LeftHand.FindAction("Rotation", throwIfNotFound: true);
        m_LeftHand_IsTracked = m_LeftHand.FindAction("Is Tracked", throwIfNotFound: true);
        m_LeftHand_TrackingState = m_LeftHand.FindAction("Tracking State", throwIfNotFound: true);
        m_LeftHand_HapticDevice = m_LeftHand.FindAction("Haptic Device", throwIfNotFound: true);
        m_LeftHand_AimPosition = m_LeftHand.FindAction("Aim Position", throwIfNotFound: true);
        m_LeftHand_AimRotation = m_LeftHand.FindAction("Aim Rotation", throwIfNotFound: true);
        m_LeftHand_AimFlags = m_LeftHand.FindAction("Aim Flags", throwIfNotFound: true);
        m_LeftHand_PinchPosition = m_LeftHand.FindAction("Pinch Position", throwIfNotFound: true);
        m_LeftHand_PokePosition = m_LeftHand.FindAction("Poke Position", throwIfNotFound: true);
        m_LeftHand_PokeRotation = m_LeftHand.FindAction("Poke Rotation", throwIfNotFound: true);
        m_LeftHand_GripPosition = m_LeftHand.FindAction("Grip Position", throwIfNotFound: true);
        m_LeftHand_GripRotation = m_LeftHand.FindAction("Grip Rotation", throwIfNotFound: true);
        m_LeftHand_Select = m_LeftHand.FindAction("Select", throwIfNotFound: true);
        m_LeftHand_SelectValue = m_LeftHand.FindAction("Select Value", throwIfNotFound: true);
        m_LeftHand_Activate = m_LeftHand.FindAction("Activate", throwIfNotFound: true);
        m_LeftHand_ActivateValue = m_LeftHand.FindAction("Activate Value", throwIfNotFound: true);
        m_LeftHand_UIPress = m_LeftHand.FindAction("UI Press", throwIfNotFound: true);
        m_LeftHand_UIPressValue = m_LeftHand.FindAction("UI Press Value", throwIfNotFound: true);
        m_LeftHand_UIScroll = m_LeftHand.FindAction("UI Scroll", throwIfNotFound: true);
        m_LeftHand_RotateAnchor = m_LeftHand.FindAction("Rotate Anchor", throwIfNotFound: true);
        m_LeftHand_TranslateAnchor = m_LeftHand.FindAction("Translate Anchor", throwIfNotFound: true);
        m_LeftHand_ScaleToggle = m_LeftHand.FindAction("Scale Toggle", throwIfNotFound: true);
        m_LeftHand_ScaleDelta = m_LeftHand.FindAction("Scale Delta", throwIfNotFound: true);
        // RightHand
        m_RightHand = asset.FindActionMap("RightHand", throwIfNotFound: true);
        m_RightHand_Directionals = m_RightHand.FindAction("Directionals", throwIfNotFound: true);
        m_RightHand_FaceButtons = m_RightHand.FindAction("Face Buttons", throwIfNotFound: true);
        m_RightHand_Position = m_RightHand.FindAction("Position", throwIfNotFound: true);
        m_RightHand_Rotation = m_RightHand.FindAction("Rotation", throwIfNotFound: true);
        m_RightHand_IsTracked = m_RightHand.FindAction("Is Tracked", throwIfNotFound: true);
        m_RightHand_TrackingState = m_RightHand.FindAction("Tracking State", throwIfNotFound: true);
        m_RightHand_HapticDevice = m_RightHand.FindAction("Haptic Device", throwIfNotFound: true);
        m_RightHand_AimPosition = m_RightHand.FindAction("Aim Position", throwIfNotFound: true);
        m_RightHand_AimRotation = m_RightHand.FindAction("Aim Rotation", throwIfNotFound: true);
        m_RightHand_AimFlags = m_RightHand.FindAction("Aim Flags", throwIfNotFound: true);
        m_RightHand_PinchPosition = m_RightHand.FindAction("Pinch Position", throwIfNotFound: true);
        m_RightHand_PokePosition = m_RightHand.FindAction("Poke Position", throwIfNotFound: true);
        m_RightHand_PokeRotation = m_RightHand.FindAction("Poke Rotation", throwIfNotFound: true);
        m_RightHand_GripPosition = m_RightHand.FindAction("Grip Position", throwIfNotFound: true);
        m_RightHand_GripRotation = m_RightHand.FindAction("Grip Rotation", throwIfNotFound: true);
        m_RightHand_Select = m_RightHand.FindAction("Select", throwIfNotFound: true);
        m_RightHand_SelectValue = m_RightHand.FindAction("Select Value", throwIfNotFound: true);
        m_RightHand_Activate = m_RightHand.FindAction("Activate", throwIfNotFound: true);
        m_RightHand_ActivateValue = m_RightHand.FindAction("Activate Value", throwIfNotFound: true);
        m_RightHand_UIPress = m_RightHand.FindAction("UI Press", throwIfNotFound: true);
        m_RightHand_UIPressValue = m_RightHand.FindAction("UI Press Value", throwIfNotFound: true);
        m_RightHand_UIScroll = m_RightHand.FindAction("UI Scroll", throwIfNotFound: true);
        m_RightHand_RotateAnchor = m_RightHand.FindAction("Rotate Anchor", throwIfNotFound: true);
        m_RightHand_TranslateAnchor = m_RightHand.FindAction("Translate Anchor", throwIfNotFound: true);
        m_RightHand_ScaleToggle = m_RightHand.FindAction("Scale Toggle", throwIfNotFound: true);
        m_RightHand_ScaleDelta = m_RightHand.FindAction("Scale Delta", throwIfNotFound: true);
    }

    ~@DefaultInputs()
    {
        UnityEngine.Debug.Assert(!m_Head.enabled, "This will cause a leak and performance issues, DefaultInputs.Head.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_LeftHand.enabled, "This will cause a leak and performance issues, DefaultInputs.LeftHand.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_RightHand.enabled, "This will cause a leak and performance issues, DefaultInputs.RightHand.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Head
    private readonly InputActionMap m_Head;
    private List<IHeadActions> m_HeadActionsCallbackInterfaces = new List<IHeadActions>();
    private readonly InputAction m_Head_Position;
    private readonly InputAction m_Head_Rotation;
    private readonly InputAction m_Head_IsTracked;
    private readonly InputAction m_Head_TrackingState;
    private readonly InputAction m_Head_EyeGazePosition;
    private readonly InputAction m_Head_EyeGazeRotation;
    private readonly InputAction m_Head_EyeGazeIsTracked;
    private readonly InputAction m_Head_EyeGazeTrackingState;
    public struct HeadActions
    {
        private @DefaultInputs m_Wrapper;
        public HeadActions(@DefaultInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_Head_Position;
        public InputAction @Rotation => m_Wrapper.m_Head_Rotation;
        public InputAction @IsTracked => m_Wrapper.m_Head_IsTracked;
        public InputAction @TrackingState => m_Wrapper.m_Head_TrackingState;
        public InputAction @EyeGazePosition => m_Wrapper.m_Head_EyeGazePosition;
        public InputAction @EyeGazeRotation => m_Wrapper.m_Head_EyeGazeRotation;
        public InputAction @EyeGazeIsTracked => m_Wrapper.m_Head_EyeGazeIsTracked;
        public InputAction @EyeGazeTrackingState => m_Wrapper.m_Head_EyeGazeTrackingState;
        public InputActionMap Get() { return m_Wrapper.m_Head; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HeadActions set) { return set.Get(); }
        public void AddCallbacks(IHeadActions instance)
        {
            if (instance == null || m_Wrapper.m_HeadActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_HeadActionsCallbackInterfaces.Add(instance);
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @IsTracked.started += instance.OnIsTracked;
            @IsTracked.performed += instance.OnIsTracked;
            @IsTracked.canceled += instance.OnIsTracked;
            @TrackingState.started += instance.OnTrackingState;
            @TrackingState.performed += instance.OnTrackingState;
            @TrackingState.canceled += instance.OnTrackingState;
            @EyeGazePosition.started += instance.OnEyeGazePosition;
            @EyeGazePosition.performed += instance.OnEyeGazePosition;
            @EyeGazePosition.canceled += instance.OnEyeGazePosition;
            @EyeGazeRotation.started += instance.OnEyeGazeRotation;
            @EyeGazeRotation.performed += instance.OnEyeGazeRotation;
            @EyeGazeRotation.canceled += instance.OnEyeGazeRotation;
            @EyeGazeIsTracked.started += instance.OnEyeGazeIsTracked;
            @EyeGazeIsTracked.performed += instance.OnEyeGazeIsTracked;
            @EyeGazeIsTracked.canceled += instance.OnEyeGazeIsTracked;
            @EyeGazeTrackingState.started += instance.OnEyeGazeTrackingState;
            @EyeGazeTrackingState.performed += instance.OnEyeGazeTrackingState;
            @EyeGazeTrackingState.canceled += instance.OnEyeGazeTrackingState;
        }

        private void UnregisterCallbacks(IHeadActions instance)
        {
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @IsTracked.started -= instance.OnIsTracked;
            @IsTracked.performed -= instance.OnIsTracked;
            @IsTracked.canceled -= instance.OnIsTracked;
            @TrackingState.started -= instance.OnTrackingState;
            @TrackingState.performed -= instance.OnTrackingState;
            @TrackingState.canceled -= instance.OnTrackingState;
            @EyeGazePosition.started -= instance.OnEyeGazePosition;
            @EyeGazePosition.performed -= instance.OnEyeGazePosition;
            @EyeGazePosition.canceled -= instance.OnEyeGazePosition;
            @EyeGazeRotation.started -= instance.OnEyeGazeRotation;
            @EyeGazeRotation.performed -= instance.OnEyeGazeRotation;
            @EyeGazeRotation.canceled -= instance.OnEyeGazeRotation;
            @EyeGazeIsTracked.started -= instance.OnEyeGazeIsTracked;
            @EyeGazeIsTracked.performed -= instance.OnEyeGazeIsTracked;
            @EyeGazeIsTracked.canceled -= instance.OnEyeGazeIsTracked;
            @EyeGazeTrackingState.started -= instance.OnEyeGazeTrackingState;
            @EyeGazeTrackingState.performed -= instance.OnEyeGazeTrackingState;
            @EyeGazeTrackingState.canceled -= instance.OnEyeGazeTrackingState;
        }

        public void RemoveCallbacks(IHeadActions instance)
        {
            if (m_Wrapper.m_HeadActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IHeadActions instance)
        {
            foreach (var item in m_Wrapper.m_HeadActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_HeadActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public HeadActions @Head => new HeadActions(this);

    // LeftHand
    private readonly InputActionMap m_LeftHand;
    private List<ILeftHandActions> m_LeftHandActionsCallbackInterfaces = new List<ILeftHandActions>();
    private readonly InputAction m_LeftHand_Directionals;
    private readonly InputAction m_LeftHand_Position;
    private readonly InputAction m_LeftHand_Rotation;
    private readonly InputAction m_LeftHand_IsTracked;
    private readonly InputAction m_LeftHand_TrackingState;
    private readonly InputAction m_LeftHand_HapticDevice;
    private readonly InputAction m_LeftHand_AimPosition;
    private readonly InputAction m_LeftHand_AimRotation;
    private readonly InputAction m_LeftHand_AimFlags;
    private readonly InputAction m_LeftHand_PinchPosition;
    private readonly InputAction m_LeftHand_PokePosition;
    private readonly InputAction m_LeftHand_PokeRotation;
    private readonly InputAction m_LeftHand_GripPosition;
    private readonly InputAction m_LeftHand_GripRotation;
    private readonly InputAction m_LeftHand_Select;
    private readonly InputAction m_LeftHand_SelectValue;
    private readonly InputAction m_LeftHand_Activate;
    private readonly InputAction m_LeftHand_ActivateValue;
    private readonly InputAction m_LeftHand_UIPress;
    private readonly InputAction m_LeftHand_UIPressValue;
    private readonly InputAction m_LeftHand_UIScroll;
    private readonly InputAction m_LeftHand_RotateAnchor;
    private readonly InputAction m_LeftHand_TranslateAnchor;
    private readonly InputAction m_LeftHand_ScaleToggle;
    private readonly InputAction m_LeftHand_ScaleDelta;
    public struct LeftHandActions
    {
        private @DefaultInputs m_Wrapper;
        public LeftHandActions(@DefaultInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Directionals => m_Wrapper.m_LeftHand_Directionals;
        public InputAction @Position => m_Wrapper.m_LeftHand_Position;
        public InputAction @Rotation => m_Wrapper.m_LeftHand_Rotation;
        public InputAction @IsTracked => m_Wrapper.m_LeftHand_IsTracked;
        public InputAction @TrackingState => m_Wrapper.m_LeftHand_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_LeftHand_HapticDevice;
        public InputAction @AimPosition => m_Wrapper.m_LeftHand_AimPosition;
        public InputAction @AimRotation => m_Wrapper.m_LeftHand_AimRotation;
        public InputAction @AimFlags => m_Wrapper.m_LeftHand_AimFlags;
        public InputAction @PinchPosition => m_Wrapper.m_LeftHand_PinchPosition;
        public InputAction @PokePosition => m_Wrapper.m_LeftHand_PokePosition;
        public InputAction @PokeRotation => m_Wrapper.m_LeftHand_PokeRotation;
        public InputAction @GripPosition => m_Wrapper.m_LeftHand_GripPosition;
        public InputAction @GripRotation => m_Wrapper.m_LeftHand_GripRotation;
        public InputAction @Select => m_Wrapper.m_LeftHand_Select;
        public InputAction @SelectValue => m_Wrapper.m_LeftHand_SelectValue;
        public InputAction @Activate => m_Wrapper.m_LeftHand_Activate;
        public InputAction @ActivateValue => m_Wrapper.m_LeftHand_ActivateValue;
        public InputAction @UIPress => m_Wrapper.m_LeftHand_UIPress;
        public InputAction @UIPressValue => m_Wrapper.m_LeftHand_UIPressValue;
        public InputAction @UIScroll => m_Wrapper.m_LeftHand_UIScroll;
        public InputAction @RotateAnchor => m_Wrapper.m_LeftHand_RotateAnchor;
        public InputAction @TranslateAnchor => m_Wrapper.m_LeftHand_TranslateAnchor;
        public InputAction @ScaleToggle => m_Wrapper.m_LeftHand_ScaleToggle;
        public InputAction @ScaleDelta => m_Wrapper.m_LeftHand_ScaleDelta;
        public InputActionMap Get() { return m_Wrapper.m_LeftHand; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(LeftHandActions set) { return set.Get(); }
        public void AddCallbacks(ILeftHandActions instance)
        {
            if (instance == null || m_Wrapper.m_LeftHandActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_LeftHandActionsCallbackInterfaces.Add(instance);
            @Directionals.started += instance.OnDirectionals;
            @Directionals.performed += instance.OnDirectionals;
            @Directionals.canceled += instance.OnDirectionals;
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @IsTracked.started += instance.OnIsTracked;
            @IsTracked.performed += instance.OnIsTracked;
            @IsTracked.canceled += instance.OnIsTracked;
            @TrackingState.started += instance.OnTrackingState;
            @TrackingState.performed += instance.OnTrackingState;
            @TrackingState.canceled += instance.OnTrackingState;
            @HapticDevice.started += instance.OnHapticDevice;
            @HapticDevice.performed += instance.OnHapticDevice;
            @HapticDevice.canceled += instance.OnHapticDevice;
            @AimPosition.started += instance.OnAimPosition;
            @AimPosition.performed += instance.OnAimPosition;
            @AimPosition.canceled += instance.OnAimPosition;
            @AimRotation.started += instance.OnAimRotation;
            @AimRotation.performed += instance.OnAimRotation;
            @AimRotation.canceled += instance.OnAimRotation;
            @AimFlags.started += instance.OnAimFlags;
            @AimFlags.performed += instance.OnAimFlags;
            @AimFlags.canceled += instance.OnAimFlags;
            @PinchPosition.started += instance.OnPinchPosition;
            @PinchPosition.performed += instance.OnPinchPosition;
            @PinchPosition.canceled += instance.OnPinchPosition;
            @PokePosition.started += instance.OnPokePosition;
            @PokePosition.performed += instance.OnPokePosition;
            @PokePosition.canceled += instance.OnPokePosition;
            @PokeRotation.started += instance.OnPokeRotation;
            @PokeRotation.performed += instance.OnPokeRotation;
            @PokeRotation.canceled += instance.OnPokeRotation;
            @GripPosition.started += instance.OnGripPosition;
            @GripPosition.performed += instance.OnGripPosition;
            @GripPosition.canceled += instance.OnGripPosition;
            @GripRotation.started += instance.OnGripRotation;
            @GripRotation.performed += instance.OnGripRotation;
            @GripRotation.canceled += instance.OnGripRotation;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @SelectValue.started += instance.OnSelectValue;
            @SelectValue.performed += instance.OnSelectValue;
            @SelectValue.canceled += instance.OnSelectValue;
            @Activate.started += instance.OnActivate;
            @Activate.performed += instance.OnActivate;
            @Activate.canceled += instance.OnActivate;
            @ActivateValue.started += instance.OnActivateValue;
            @ActivateValue.performed += instance.OnActivateValue;
            @ActivateValue.canceled += instance.OnActivateValue;
            @UIPress.started += instance.OnUIPress;
            @UIPress.performed += instance.OnUIPress;
            @UIPress.canceled += instance.OnUIPress;
            @UIPressValue.started += instance.OnUIPressValue;
            @UIPressValue.performed += instance.OnUIPressValue;
            @UIPressValue.canceled += instance.OnUIPressValue;
            @UIScroll.started += instance.OnUIScroll;
            @UIScroll.performed += instance.OnUIScroll;
            @UIScroll.canceled += instance.OnUIScroll;
            @RotateAnchor.started += instance.OnRotateAnchor;
            @RotateAnchor.performed += instance.OnRotateAnchor;
            @RotateAnchor.canceled += instance.OnRotateAnchor;
            @TranslateAnchor.started += instance.OnTranslateAnchor;
            @TranslateAnchor.performed += instance.OnTranslateAnchor;
            @TranslateAnchor.canceled += instance.OnTranslateAnchor;
            @ScaleToggle.started += instance.OnScaleToggle;
            @ScaleToggle.performed += instance.OnScaleToggle;
            @ScaleToggle.canceled += instance.OnScaleToggle;
            @ScaleDelta.started += instance.OnScaleDelta;
            @ScaleDelta.performed += instance.OnScaleDelta;
            @ScaleDelta.canceled += instance.OnScaleDelta;
        }

        private void UnregisterCallbacks(ILeftHandActions instance)
        {
            @Directionals.started -= instance.OnDirectionals;
            @Directionals.performed -= instance.OnDirectionals;
            @Directionals.canceled -= instance.OnDirectionals;
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @IsTracked.started -= instance.OnIsTracked;
            @IsTracked.performed -= instance.OnIsTracked;
            @IsTracked.canceled -= instance.OnIsTracked;
            @TrackingState.started -= instance.OnTrackingState;
            @TrackingState.performed -= instance.OnTrackingState;
            @TrackingState.canceled -= instance.OnTrackingState;
            @HapticDevice.started -= instance.OnHapticDevice;
            @HapticDevice.performed -= instance.OnHapticDevice;
            @HapticDevice.canceled -= instance.OnHapticDevice;
            @AimPosition.started -= instance.OnAimPosition;
            @AimPosition.performed -= instance.OnAimPosition;
            @AimPosition.canceled -= instance.OnAimPosition;
            @AimRotation.started -= instance.OnAimRotation;
            @AimRotation.performed -= instance.OnAimRotation;
            @AimRotation.canceled -= instance.OnAimRotation;
            @AimFlags.started -= instance.OnAimFlags;
            @AimFlags.performed -= instance.OnAimFlags;
            @AimFlags.canceled -= instance.OnAimFlags;
            @PinchPosition.started -= instance.OnPinchPosition;
            @PinchPosition.performed -= instance.OnPinchPosition;
            @PinchPosition.canceled -= instance.OnPinchPosition;
            @PokePosition.started -= instance.OnPokePosition;
            @PokePosition.performed -= instance.OnPokePosition;
            @PokePosition.canceled -= instance.OnPokePosition;
            @PokeRotation.started -= instance.OnPokeRotation;
            @PokeRotation.performed -= instance.OnPokeRotation;
            @PokeRotation.canceled -= instance.OnPokeRotation;
            @GripPosition.started -= instance.OnGripPosition;
            @GripPosition.performed -= instance.OnGripPosition;
            @GripPosition.canceled -= instance.OnGripPosition;
            @GripRotation.started -= instance.OnGripRotation;
            @GripRotation.performed -= instance.OnGripRotation;
            @GripRotation.canceled -= instance.OnGripRotation;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @SelectValue.started -= instance.OnSelectValue;
            @SelectValue.performed -= instance.OnSelectValue;
            @SelectValue.canceled -= instance.OnSelectValue;
            @Activate.started -= instance.OnActivate;
            @Activate.performed -= instance.OnActivate;
            @Activate.canceled -= instance.OnActivate;
            @ActivateValue.started -= instance.OnActivateValue;
            @ActivateValue.performed -= instance.OnActivateValue;
            @ActivateValue.canceled -= instance.OnActivateValue;
            @UIPress.started -= instance.OnUIPress;
            @UIPress.performed -= instance.OnUIPress;
            @UIPress.canceled -= instance.OnUIPress;
            @UIPressValue.started -= instance.OnUIPressValue;
            @UIPressValue.performed -= instance.OnUIPressValue;
            @UIPressValue.canceled -= instance.OnUIPressValue;
            @UIScroll.started -= instance.OnUIScroll;
            @UIScroll.performed -= instance.OnUIScroll;
            @UIScroll.canceled -= instance.OnUIScroll;
            @RotateAnchor.started -= instance.OnRotateAnchor;
            @RotateAnchor.performed -= instance.OnRotateAnchor;
            @RotateAnchor.canceled -= instance.OnRotateAnchor;
            @TranslateAnchor.started -= instance.OnTranslateAnchor;
            @TranslateAnchor.performed -= instance.OnTranslateAnchor;
            @TranslateAnchor.canceled -= instance.OnTranslateAnchor;
            @ScaleToggle.started -= instance.OnScaleToggle;
            @ScaleToggle.performed -= instance.OnScaleToggle;
            @ScaleToggle.canceled -= instance.OnScaleToggle;
            @ScaleDelta.started -= instance.OnScaleDelta;
            @ScaleDelta.performed -= instance.OnScaleDelta;
            @ScaleDelta.canceled -= instance.OnScaleDelta;
        }

        public void RemoveCallbacks(ILeftHandActions instance)
        {
            if (m_Wrapper.m_LeftHandActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ILeftHandActions instance)
        {
            foreach (var item in m_Wrapper.m_LeftHandActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_LeftHandActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public LeftHandActions @LeftHand => new LeftHandActions(this);

    // RightHand
    private readonly InputActionMap m_RightHand;
    private List<IRightHandActions> m_RightHandActionsCallbackInterfaces = new List<IRightHandActions>();
    private readonly InputAction m_RightHand_Directionals;
    private readonly InputAction m_RightHand_FaceButtons;
    private readonly InputAction m_RightHand_Position;
    private readonly InputAction m_RightHand_Rotation;
    private readonly InputAction m_RightHand_IsTracked;
    private readonly InputAction m_RightHand_TrackingState;
    private readonly InputAction m_RightHand_HapticDevice;
    private readonly InputAction m_RightHand_AimPosition;
    private readonly InputAction m_RightHand_AimRotation;
    private readonly InputAction m_RightHand_AimFlags;
    private readonly InputAction m_RightHand_PinchPosition;
    private readonly InputAction m_RightHand_PokePosition;
    private readonly InputAction m_RightHand_PokeRotation;
    private readonly InputAction m_RightHand_GripPosition;
    private readonly InputAction m_RightHand_GripRotation;
    private readonly InputAction m_RightHand_Select;
    private readonly InputAction m_RightHand_SelectValue;
    private readonly InputAction m_RightHand_Activate;
    private readonly InputAction m_RightHand_ActivateValue;
    private readonly InputAction m_RightHand_UIPress;
    private readonly InputAction m_RightHand_UIPressValue;
    private readonly InputAction m_RightHand_UIScroll;
    private readonly InputAction m_RightHand_RotateAnchor;
    private readonly InputAction m_RightHand_TranslateAnchor;
    private readonly InputAction m_RightHand_ScaleToggle;
    private readonly InputAction m_RightHand_ScaleDelta;
    public struct RightHandActions
    {
        private @DefaultInputs m_Wrapper;
        public RightHandActions(@DefaultInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Directionals => m_Wrapper.m_RightHand_Directionals;
        public InputAction @FaceButtons => m_Wrapper.m_RightHand_FaceButtons;
        public InputAction @Position => m_Wrapper.m_RightHand_Position;
        public InputAction @Rotation => m_Wrapper.m_RightHand_Rotation;
        public InputAction @IsTracked => m_Wrapper.m_RightHand_IsTracked;
        public InputAction @TrackingState => m_Wrapper.m_RightHand_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_RightHand_HapticDevice;
        public InputAction @AimPosition => m_Wrapper.m_RightHand_AimPosition;
        public InputAction @AimRotation => m_Wrapper.m_RightHand_AimRotation;
        public InputAction @AimFlags => m_Wrapper.m_RightHand_AimFlags;
        public InputAction @PinchPosition => m_Wrapper.m_RightHand_PinchPosition;
        public InputAction @PokePosition => m_Wrapper.m_RightHand_PokePosition;
        public InputAction @PokeRotation => m_Wrapper.m_RightHand_PokeRotation;
        public InputAction @GripPosition => m_Wrapper.m_RightHand_GripPosition;
        public InputAction @GripRotation => m_Wrapper.m_RightHand_GripRotation;
        public InputAction @Select => m_Wrapper.m_RightHand_Select;
        public InputAction @SelectValue => m_Wrapper.m_RightHand_SelectValue;
        public InputAction @Activate => m_Wrapper.m_RightHand_Activate;
        public InputAction @ActivateValue => m_Wrapper.m_RightHand_ActivateValue;
        public InputAction @UIPress => m_Wrapper.m_RightHand_UIPress;
        public InputAction @UIPressValue => m_Wrapper.m_RightHand_UIPressValue;
        public InputAction @UIScroll => m_Wrapper.m_RightHand_UIScroll;
        public InputAction @RotateAnchor => m_Wrapper.m_RightHand_RotateAnchor;
        public InputAction @TranslateAnchor => m_Wrapper.m_RightHand_TranslateAnchor;
        public InputAction @ScaleToggle => m_Wrapper.m_RightHand_ScaleToggle;
        public InputAction @ScaleDelta => m_Wrapper.m_RightHand_ScaleDelta;
        public InputActionMap Get() { return m_Wrapper.m_RightHand; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RightHandActions set) { return set.Get(); }
        public void AddCallbacks(IRightHandActions instance)
        {
            if (instance == null || m_Wrapper.m_RightHandActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RightHandActionsCallbackInterfaces.Add(instance);
            @Directionals.started += instance.OnDirectionals;
            @Directionals.performed += instance.OnDirectionals;
            @Directionals.canceled += instance.OnDirectionals;
            @FaceButtons.started += instance.OnFaceButtons;
            @FaceButtons.performed += instance.OnFaceButtons;
            @FaceButtons.canceled += instance.OnFaceButtons;
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @IsTracked.started += instance.OnIsTracked;
            @IsTracked.performed += instance.OnIsTracked;
            @IsTracked.canceled += instance.OnIsTracked;
            @TrackingState.started += instance.OnTrackingState;
            @TrackingState.performed += instance.OnTrackingState;
            @TrackingState.canceled += instance.OnTrackingState;
            @HapticDevice.started += instance.OnHapticDevice;
            @HapticDevice.performed += instance.OnHapticDevice;
            @HapticDevice.canceled += instance.OnHapticDevice;
            @AimPosition.started += instance.OnAimPosition;
            @AimPosition.performed += instance.OnAimPosition;
            @AimPosition.canceled += instance.OnAimPosition;
            @AimRotation.started += instance.OnAimRotation;
            @AimRotation.performed += instance.OnAimRotation;
            @AimRotation.canceled += instance.OnAimRotation;
            @AimFlags.started += instance.OnAimFlags;
            @AimFlags.performed += instance.OnAimFlags;
            @AimFlags.canceled += instance.OnAimFlags;
            @PinchPosition.started += instance.OnPinchPosition;
            @PinchPosition.performed += instance.OnPinchPosition;
            @PinchPosition.canceled += instance.OnPinchPosition;
            @PokePosition.started += instance.OnPokePosition;
            @PokePosition.performed += instance.OnPokePosition;
            @PokePosition.canceled += instance.OnPokePosition;
            @PokeRotation.started += instance.OnPokeRotation;
            @PokeRotation.performed += instance.OnPokeRotation;
            @PokeRotation.canceled += instance.OnPokeRotation;
            @GripPosition.started += instance.OnGripPosition;
            @GripPosition.performed += instance.OnGripPosition;
            @GripPosition.canceled += instance.OnGripPosition;
            @GripRotation.started += instance.OnGripRotation;
            @GripRotation.performed += instance.OnGripRotation;
            @GripRotation.canceled += instance.OnGripRotation;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @SelectValue.started += instance.OnSelectValue;
            @SelectValue.performed += instance.OnSelectValue;
            @SelectValue.canceled += instance.OnSelectValue;
            @Activate.started += instance.OnActivate;
            @Activate.performed += instance.OnActivate;
            @Activate.canceled += instance.OnActivate;
            @ActivateValue.started += instance.OnActivateValue;
            @ActivateValue.performed += instance.OnActivateValue;
            @ActivateValue.canceled += instance.OnActivateValue;
            @UIPress.started += instance.OnUIPress;
            @UIPress.performed += instance.OnUIPress;
            @UIPress.canceled += instance.OnUIPress;
            @UIPressValue.started += instance.OnUIPressValue;
            @UIPressValue.performed += instance.OnUIPressValue;
            @UIPressValue.canceled += instance.OnUIPressValue;
            @UIScroll.started += instance.OnUIScroll;
            @UIScroll.performed += instance.OnUIScroll;
            @UIScroll.canceled += instance.OnUIScroll;
            @RotateAnchor.started += instance.OnRotateAnchor;
            @RotateAnchor.performed += instance.OnRotateAnchor;
            @RotateAnchor.canceled += instance.OnRotateAnchor;
            @TranslateAnchor.started += instance.OnTranslateAnchor;
            @TranslateAnchor.performed += instance.OnTranslateAnchor;
            @TranslateAnchor.canceled += instance.OnTranslateAnchor;
            @ScaleToggle.started += instance.OnScaleToggle;
            @ScaleToggle.performed += instance.OnScaleToggle;
            @ScaleToggle.canceled += instance.OnScaleToggle;
            @ScaleDelta.started += instance.OnScaleDelta;
            @ScaleDelta.performed += instance.OnScaleDelta;
            @ScaleDelta.canceled += instance.OnScaleDelta;
        }

        private void UnregisterCallbacks(IRightHandActions instance)
        {
            @Directionals.started -= instance.OnDirectionals;
            @Directionals.performed -= instance.OnDirectionals;
            @Directionals.canceled -= instance.OnDirectionals;
            @FaceButtons.started -= instance.OnFaceButtons;
            @FaceButtons.performed -= instance.OnFaceButtons;
            @FaceButtons.canceled -= instance.OnFaceButtons;
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @IsTracked.started -= instance.OnIsTracked;
            @IsTracked.performed -= instance.OnIsTracked;
            @IsTracked.canceled -= instance.OnIsTracked;
            @TrackingState.started -= instance.OnTrackingState;
            @TrackingState.performed -= instance.OnTrackingState;
            @TrackingState.canceled -= instance.OnTrackingState;
            @HapticDevice.started -= instance.OnHapticDevice;
            @HapticDevice.performed -= instance.OnHapticDevice;
            @HapticDevice.canceled -= instance.OnHapticDevice;
            @AimPosition.started -= instance.OnAimPosition;
            @AimPosition.performed -= instance.OnAimPosition;
            @AimPosition.canceled -= instance.OnAimPosition;
            @AimRotation.started -= instance.OnAimRotation;
            @AimRotation.performed -= instance.OnAimRotation;
            @AimRotation.canceled -= instance.OnAimRotation;
            @AimFlags.started -= instance.OnAimFlags;
            @AimFlags.performed -= instance.OnAimFlags;
            @AimFlags.canceled -= instance.OnAimFlags;
            @PinchPosition.started -= instance.OnPinchPosition;
            @PinchPosition.performed -= instance.OnPinchPosition;
            @PinchPosition.canceled -= instance.OnPinchPosition;
            @PokePosition.started -= instance.OnPokePosition;
            @PokePosition.performed -= instance.OnPokePosition;
            @PokePosition.canceled -= instance.OnPokePosition;
            @PokeRotation.started -= instance.OnPokeRotation;
            @PokeRotation.performed -= instance.OnPokeRotation;
            @PokeRotation.canceled -= instance.OnPokeRotation;
            @GripPosition.started -= instance.OnGripPosition;
            @GripPosition.performed -= instance.OnGripPosition;
            @GripPosition.canceled -= instance.OnGripPosition;
            @GripRotation.started -= instance.OnGripRotation;
            @GripRotation.performed -= instance.OnGripRotation;
            @GripRotation.canceled -= instance.OnGripRotation;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @SelectValue.started -= instance.OnSelectValue;
            @SelectValue.performed -= instance.OnSelectValue;
            @SelectValue.canceled -= instance.OnSelectValue;
            @Activate.started -= instance.OnActivate;
            @Activate.performed -= instance.OnActivate;
            @Activate.canceled -= instance.OnActivate;
            @ActivateValue.started -= instance.OnActivateValue;
            @ActivateValue.performed -= instance.OnActivateValue;
            @ActivateValue.canceled -= instance.OnActivateValue;
            @UIPress.started -= instance.OnUIPress;
            @UIPress.performed -= instance.OnUIPress;
            @UIPress.canceled -= instance.OnUIPress;
            @UIPressValue.started -= instance.OnUIPressValue;
            @UIPressValue.performed -= instance.OnUIPressValue;
            @UIPressValue.canceled -= instance.OnUIPressValue;
            @UIScroll.started -= instance.OnUIScroll;
            @UIScroll.performed -= instance.OnUIScroll;
            @UIScroll.canceled -= instance.OnUIScroll;
            @RotateAnchor.started -= instance.OnRotateAnchor;
            @RotateAnchor.performed -= instance.OnRotateAnchor;
            @RotateAnchor.canceled -= instance.OnRotateAnchor;
            @TranslateAnchor.started -= instance.OnTranslateAnchor;
            @TranslateAnchor.performed -= instance.OnTranslateAnchor;
            @TranslateAnchor.canceled -= instance.OnTranslateAnchor;
            @ScaleToggle.started -= instance.OnScaleToggle;
            @ScaleToggle.performed -= instance.OnScaleToggle;
            @ScaleToggle.canceled -= instance.OnScaleToggle;
            @ScaleDelta.started -= instance.OnScaleDelta;
            @ScaleDelta.performed -= instance.OnScaleDelta;
            @ScaleDelta.canceled -= instance.OnScaleDelta;
        }

        public void RemoveCallbacks(IRightHandActions instance)
        {
            if (m_Wrapper.m_RightHandActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRightHandActions instance)
        {
            foreach (var item in m_Wrapper.m_RightHandActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RightHandActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RightHandActions @RightHand => new RightHandActions(this);
    private int m_GenericXRControllerSchemeIndex = -1;
    public InputControlScheme GenericXRControllerScheme
    {
        get
        {
            if (m_GenericXRControllerSchemeIndex == -1) m_GenericXRControllerSchemeIndex = asset.FindControlSchemeIndex("Generic XR Controller");
            return asset.controlSchemes[m_GenericXRControllerSchemeIndex];
        }
    }
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    public interface IHeadActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnIsTracked(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnEyeGazePosition(InputAction.CallbackContext context);
        void OnEyeGazeRotation(InputAction.CallbackContext context);
        void OnEyeGazeIsTracked(InputAction.CallbackContext context);
        void OnEyeGazeTrackingState(InputAction.CallbackContext context);
    }
    public interface ILeftHandActions
    {
        void OnDirectionals(InputAction.CallbackContext context);
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnIsTracked(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
        void OnAimPosition(InputAction.CallbackContext context);
        void OnAimRotation(InputAction.CallbackContext context);
        void OnAimFlags(InputAction.CallbackContext context);
        void OnPinchPosition(InputAction.CallbackContext context);
        void OnPokePosition(InputAction.CallbackContext context);
        void OnPokeRotation(InputAction.CallbackContext context);
        void OnGripPosition(InputAction.CallbackContext context);
        void OnGripRotation(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectValue(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnActivateValue(InputAction.CallbackContext context);
        void OnUIPress(InputAction.CallbackContext context);
        void OnUIPressValue(InputAction.CallbackContext context);
        void OnUIScroll(InputAction.CallbackContext context);
        void OnRotateAnchor(InputAction.CallbackContext context);
        void OnTranslateAnchor(InputAction.CallbackContext context);
        void OnScaleToggle(InputAction.CallbackContext context);
        void OnScaleDelta(InputAction.CallbackContext context);
    }
    public interface IRightHandActions
    {
        void OnDirectionals(InputAction.CallbackContext context);
        void OnFaceButtons(InputAction.CallbackContext context);
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnIsTracked(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
        void OnAimPosition(InputAction.CallbackContext context);
        void OnAimRotation(InputAction.CallbackContext context);
        void OnAimFlags(InputAction.CallbackContext context);
        void OnPinchPosition(InputAction.CallbackContext context);
        void OnPokePosition(InputAction.CallbackContext context);
        void OnPokeRotation(InputAction.CallbackContext context);
        void OnGripPosition(InputAction.CallbackContext context);
        void OnGripRotation(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectValue(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnActivateValue(InputAction.CallbackContext context);
        void OnUIPress(InputAction.CallbackContext context);
        void OnUIPressValue(InputAction.CallbackContext context);
        void OnUIScroll(InputAction.CallbackContext context);
        void OnRotateAnchor(InputAction.CallbackContext context);
        void OnTranslateAnchor(InputAction.CallbackContext context);
        void OnScaleToggle(InputAction.CallbackContext context);
        void OnScaleDelta(InputAction.CallbackContext context);
    }
}
